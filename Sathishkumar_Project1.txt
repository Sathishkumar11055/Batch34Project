using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Batch34_Day5
{
    class ProjectPuzz
    {
        static void inputArray(int[] a, int n)
        {
            int l = a.Length;
            int q = l - n;
            for (int i = 0; i < l; i++)
            {
                a[i] = 0;
            }
            a[q] = 1;
        }

        static void displayArray(int[] a, int n)
        {
            Console.WriteLine();
            int l = a.Length;

            for (int i = 0; i < l; i++)
            {
                if (i % n == 0)
                    Console.WriteLine();
                Console.Write(a[i]);
            }
        }

        static void upSide(int[] a, int n, ref int currpos)
        {

            if (currpos >= n)
            {
                a[currpos] = 0;
                currpos = currpos - n;
                a[currpos] = 1;
            }
            else
                Console.WriteLine("you cannot perform upside function");
        }

        static void downSide(int[] a, int n, ref int currpos)
        {

            if (currpos < a.Length-n)
            {
                a[currpos] = 0;
                currpos = currpos + n;
                a[currpos] = 1;
            }
            else
                Console.WriteLine("you cannot perform downside function");
        }

        static void rightSide(int[] a, int n, ref int currpos)
        {
            if (currpos%n != n-1)
            {
                a[currpos] = 0;
                currpos = currpos + 1;
                a[currpos] = 1;
            }
            else
                Console.WriteLine("you cannot perform rigthside function");
        }

        static void leftSide(int[] a, int n, ref int currpos)
        {
            if (currpos % n != 0)
            {
                a[currpos] = 0;
                currpos = currpos - 1;
                a[currpos] = 1;
            }
            else
                Console.WriteLine("you cannot perform leftside function");
        }

        static void Main(string[] args)
        {
            int n;
            Console.WriteLine("Enter number of elements");
            n = Convert.ToInt32(Console.ReadLine());



            int q = n * n;

            int[] a = new int[q];

            inputArray(a, n);
            displayArray(a, n);



            int b = 0;
            int currpos = n * n - n;
            a[currpos] = 1;

            do
            {

                Console.WriteLine("\nEnter your option \n2.UP \n4.DOWN \n6.LEFT \n8.Right \n10.EXIT");
                b = Convert.ToInt32(Console.ReadLine());
                if (b == 2)
                {
                    upSide(a, n, ref currpos);

                    displayArray(a, n);
                }

                else if (b == 4)
                {
                    downSide(a, n, ref currpos);

                    displayArray(a, n);
                }

                else if (b == 6)
                {
                    leftSide(a, n, ref currpos);

                    displayArray(a, n);
                }
                else if (b == 8)
                {
                    rightSide(a, n, ref currpos);

                    displayArray(a, n);
                }
                else if (b == 10)
                {
                    break;
                }
                else
                {
                    Console.WriteLine("Put a Valid Option");
                }
            } while (b != 0);
            Console.Read();
        }
    }
}
